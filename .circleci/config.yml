version: 2
jobs:
  build:
    docker:
      - image: circleci/node:9.8

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  deploy-docker:
    machine: true

    working_directory: ~/repo

    steps:
      - checkout

      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS

      - run: docker build -t $DOCKER_USER/$DOCKER_IMAGE_NAME .

      - run: docker push $DOCKER_USER/$DOCKER_IMAGE_NAME

  deploy-gc:
    
    docker:
      - image: google/cloud-sdk:latest

    working_directory: ~/repo
    
    steps:
      - checkout

      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ~/repo/key.config.json

      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/key.config.json

      - run: sed -i -e 's/true/false/' /usr/lib/google-cloud-sdk/lib/googlecloudsdk/core/config.json

      - run: gcloud --quiet components update

      - run: gcloud auth activate-service-account --key-file=${HOME}/key.config.json

      - run: gcloud config set project $GCLOUD_PROJECT
      
      - setup_remote_docker:
          docker_layer_caching: true 

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run: docker build -t asia.gcr.io/${GCLOUD_PROJECT}/$DOCKER_IMAGE_NAME .
      
      - run: gcloud docker -- push asia.gcr.io/${GCLOUD_PROJECT}/$DOCKER_IMAGE_NAME

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build

      - deploy-docker:
          filters:
            branches:
              only: master
          requires:
            - build

      - deploy-gc:
          requires:
            - build
