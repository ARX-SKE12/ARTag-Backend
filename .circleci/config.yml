version: 2
jobs:
  build:
    docker:
      - image: circleci/node:9.8

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  deploy-gc:
    
    docker:
      - image: google/cloud-sdk:latest

    working_directory: ~/repo
    
    steps:
      - checkout

      - run: 
          name: Decode GC Key File
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ~/repo/$KEY_FILE
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/$KEY_FILE

      - run: 
          name: Update GC
          command: |
            sed -i -e 's/true/false/' /usr/lib/google-cloud-sdk/lib/googlecloudsdk/core/config.json
            gcloud --quiet components update

      - run: 
          name: GC Configuration
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/$KEY_FILE
            gcloud config set project $GCLOUD_PROJECT
      
      - setup_remote_docker:
          docker_layer_caching: true 

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run: 
          name: Deploy Image to Container Registry
          command: |
            docker build -t asia.gcr.io/${GCLOUD_PROJECT}/$DOCKER_IMAGE_NAME .
            docker tag asia.gcr.io/${GCLOUD_PROJECT}/$DOCKER_IMAGE_NAME asia.gcr.io/${GCLOUD_PROJECT}/$DOCKER_IMAGE_NAME:$CIRCLE_SHA1
            gcloud docker -- push asia.gcr.io/${GCLOUD_PROJECT}/$DOCKER_IMAGE_NAME:$CIRCLE_SHA1

      - run: 
          name: Load Kubernetes Config Files
          command: |
            gsutil cp gs://$SECURE_BUCKET/$SERVER_CONFIG_FILE ./$SERVER_CONFIG_FILE
            gsutil cp gs://$SECURE_BUCKET/$LOAD_BALANCER_CONFIG_FILE ./$LOAD_BALANCER_CONFIG_FILE
            gsutil cp gs://$SECURE_BUCKET/$REDIS_SERVICE_CONFIG_FILE ./$REDIS_SERVICE_CONFIG_FILE
            gsutil cp gs://$SECURE_BUCKET/$REDIS_CONFIG_FILE ./$REDIS_CONFIG_FILE

      - run: 
          name: Kubernetes Configuration
          command: |
            gcloud config set compute/zone $COMPUTE_ZONE
            gcloud container clusters get-credentials $CLUSTER_NAME
            gcloud components install kubectl

      - run:
          name: Deploy to Kubernetes
          command: |
            sed -ie "s/THIS_STRING_IS_REPLACED_DURING_BUILD/$(date)/g" $SERVER_CONFIG_FILE
            kubectl apply -f $REDIS_CONFIG_FILE
            kubectl apply -f $REDIS_SERVICE_CONFIG_FILE
            kubectl apply -f $SERVER_CONFIG_FILE
            kubectl apply -f $LOAD_BALANCER_CONFIG_FILE
            kubectl set image deployment/artag-server artag-server=asia.gcr.io/${GCLOUD_PROJECT}/$DOCKER_IMAGE_NAME:$CIRCLE_SHA1

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build

      - deploy-gc:
          filters:
            branches:
              only: 
                - master
                - hotfix/production-bug
          requires:
            - build
